/* Submit Order Test - Explanation */

1. The test simulates the process of placing an order form beginning to the end.
2. All the element locator pertaining to every webpage is stored in its respective Page Object class.
3. The PageObject Classes are under main/java as they do not have have test data in them.
4. These classes are used to write test classes which are under test/java.
5. The SubmitOrderTest begin with creating an object of ProductCatalogue page.
6. The TestNG annotation BeforeMethod is used in the BaseTest Class that runs first.
7. The launchApplication method runs to
    i. initialize webdriver.
    ii. logins into the Website using userEmail and Password.
    iii. returns a landing page object back to SubmitOrderTest.
8. The landingPage object is stored in the ProductCatalogue object and used to get the list of products.
9. Also add the product to cart based on the productName passed by the DataProvider method, which is in return fetched
   from a JSON file.
10. Each POM class has a method to go to the next page and returns the object to the next page.
11. Each POM class uses @FindBy or By annotation to find element locators.
12. Each POM class has a constructor that take the Webdriver object form the AbstractComponents parent class and sets
    it to the driver object of its own class.
13. Add initializes all the element location using the iniElement method of the PageFactory class.

/* AbstractComponents Class - Explanation */

1. It has the element locators of all the generic components that appear on the Website like
   i. Home Page
   ii. Orders Page
   iii. Cart Page
2. Also has method that implements the action to load those generic pages.
3. Also has method to implement ExplicitWaits for element to be appear and to disappear.

/* Global properties file under Resource Package - Explanation */

1. This holds data regarding the browser. Changing browser here can help run tests on different version.
2. The BaseTest class inherits AbstractComponents Class , the driverInitializer method take the data from Global
   properties file to change the browser.

/* BaseTest Class - Explanation */

1. Run all the base method to get the test started like , initializes the driver and opens the browser.
2. Has the methods with @BeforeMethod annotation for driverInitializer method.
3. Has the @AfterMethod annotation for the closeBrowser method.
4. Launched the website and logins in into it using userEmail and Password.
5. Lastly has a method to take screenshot of the website when the test fails to send the file to reports.

/* testSuites Package - Explanation */

1. The package as many TestNg xml file to run specific tests based on the groups and execution type (parallel).